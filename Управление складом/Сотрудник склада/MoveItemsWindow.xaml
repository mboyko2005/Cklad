<Window x:Class="УправлениеСкладом.Сотрудник_склада.MoveItemsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        Title="Перемещение товаров" Height="700" Width="900"
        WindowStartupLocation="CenterOwner" WindowStyle="None" AllowsTransparency="True" Background="Transparent"
        MouseDown="Window_MouseDown">
    <Window.Resources>
        <!-- Определение зелёного цвета для иконок цен (можно удалить, если больше не используется) -->
        <SolidColorBrush x:Key="PriceIconForegroundBrush" Color="Green"/>

        <!-- DataTemplate для ComboBoxItem с иконкой -->
        <DataTemplate x:Key="ComboBoxItemWithIconTemplate">
            <StackPanel Orientation="Horizontal">
                <iconPacks:PackIconMaterial x:Name="LocationIcon" Kind="Warehouse" Width="16" Height="16" Margin="0,0,5,0"/>
                <TextBlock Text="{Binding}" VerticalAlignment="Center" TextWrapping="Wrap" />
            </StackPanel>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding}" Value="Нет мест хранения">
                    <Setter TargetName="LocationIcon" Property="Kind" Value="Information"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <!-- ControlTemplate для ToggleButton в ComboBox -->
        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
            <Border x:Name="Border"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="10"
                    Padding="5">
                <iconPacks:PackIconMaterial Kind="ChevronDown" Width="16" Height="16" Foreground="{TemplateBinding Foreground}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource ButtonHoverBackgroundBrush}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource ButtonPressedBackgroundBrush}"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource ButtonPressedBackgroundBrush}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- ControlTemplate для TextBox в ComboBox -->
        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
            <Border x:Name="PART_ContentHost"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="10"/>
        </ControlTemplate>

        <!-- Новый стиль для ComboBox с улучшенным внешним видом -->
        <Style x:Key="StyledComboBox" TargetType="ComboBox">
            <Setter Property="Background" Value="{DynamicResource ButtonBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="ToggleButton"
                                          Template="{StaticResource ComboBoxToggleButton}"
                                          Grid.Column="2"
                                          Focusable="false"
                                          IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          ClickMode="Press"/>
                            <ContentPresenter Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="30,0,0,0" />
                            <TextBox x:Name="PART_EditableTextBox"
                                     Template="{StaticResource ComboBoxTextBox}"
                                     HorizontalAlignment="Left"
                                     VerticalAlignment="Center"
                                     Margin="3,3,23,3"
                                     Focusable="True"
                                     Background="Transparent"
                                     Visibility="Hidden"
                                     IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEditable" Value="True">
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                            <Trigger Property="HasItems" Value="false">
                                <Setter Property="Foreground" Value="Gray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemTemplate" Value="{StaticResource ComboBoxItemWithIconTemplate}"/>
            <Setter Property="Width" Value="250"/>
        </Style>

        <!-- Общие стили для кнопок -->
        <Style x:Key="ControlButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="{DynamicResource ButtonBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="MinWidth" Value="120"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="10">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{DynamicResource ButtonHoverBackgroundBrush}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{DynamicResource ButtonPressedBackgroundBrush}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Стиль для TextBox с иконкой и водяным знаком -->
        <Style x:Key="IconWatermarkTextBoxStyle" TargetType="TextBox">
            <Setter Property="Background" Value="{DynamicResource ButtonBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Grid>
                            <!-- Корневой Border -->
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="10"/>

                            <!-- Содержимое TextBox -->
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <!-- Иконка PackIconMaterial -->
                                <iconPacks:PackIconMaterial x:Name="Icon"
                                                            Width="20" Height="20"
                                                            Foreground="{TemplateBinding Foreground}"
                                                            VerticalAlignment="Center"
                                                            HorizontalAlignment="Left"
                                                            Margin="5,0,10,0"
                                                            Visibility="Collapsed"/>

                                <!-- Содержимое TextBox -->
                                <ScrollViewer Grid.Column="1"
                                              Margin="0"
                                              x:Name="PART_ContentHost"/>

                                <!-- Водяной знак -->
                                <TextBlock x:Name="Watermark"
                                           Text="{TemplateBinding Tag}"
                                           Foreground="Gray"
                                           Margin="30,0,0,0"
                                           VerticalAlignment="Center"
                                           IsHitTestVisible="False"
                                           Visibility="Collapsed"/>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <!-- Показать водяной знак, если текст пуст -->
                            <Trigger Property="Text" Value="">
                                <Setter TargetName="Watermark" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="Icon" Property="Visibility" Value="Visible"/>
                            </Trigger>
                            <!-- Скрыть водяной знак при фокусе -->
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="Watermark" Property="Visibility" Value="Collapsed"/>
                                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
                            </Trigger>

                            <!-- Установка иконки и цвета для поиска по наименованию или категории -->
                            <Trigger Property="Tag" Value="Поиск по наименованию или категории">
                                <Setter TargetName="Icon" Property="Kind" Value="Magnify"/>
                                <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource PrimaryBrush}"/>
                                <Setter TargetName="Icon" Property="Visibility" Value="Visible"/>
                            </Trigger>
                            <!-- Установка иконки для Количество для перемещения -->
                            <Trigger Property="Tag" Value="Количество для перемещения">
                                <Setter TargetName="Icon" Property="Kind" Value="Numeric0Box"/>
                                <Setter TargetName="Icon" Property="Visibility" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Стиль для заголовков столбцов DataGrid -->
        <Style TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="{DynamicResource ButtonBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrush}"/>
            <Setter Property="BorderThickness" Value="0,0,0,1"/>
            <Setter Property="Padding" Value="5"/>
        </Style>

        <!-- Стиль для строк DataGrid -->
        <Style TargetType="DataGridRow">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Стиль для ячеек DataGrid -->
        <Style TargetType="DataGridCell">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="5"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Стиль для DataGrid -->
        <Style TargetType="DataGrid" x:Key="StyledDataGrid">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
            <Setter Property="RowBackground" Value="Transparent"/>
            <Setter Property="AlternatingRowBackground" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="GridLinesVisibility" Value="None"/>
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="SelectionMode" Value="Single"/>
            <Setter Property="SelectionUnit" Value="FullRow"/>
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ColumnWidth" Value="*"/>
            <Setter Property="HeadersVisibility" Value="Column"/>
        </Style>
    </Window.Resources>

    <Grid>
        <Border Background="{DynamicResource WindowBackgroundBrush}" CornerRadius="20" Padding="20">
            <Border.Effect>
                <DropShadowEffect BlurRadius="10" ShadowDepth="0" Opacity="0.2"/>
            </Border.Effect>
            <StackPanel>
                <!-- Заголовок с кнопкой закрытия -->
                <Grid Margin="0,0,0,10">
                    <TextBlock Text="Перемещение товаров" FontSize="18" FontWeight="Bold" Foreground="{DynamicResource PrimaryBrush}" HorizontalAlignment="Center"/>
                    <Button Width="30" Height="30" Background="Transparent" BorderThickness="0"
                            HorizontalAlignment="Right" VerticalAlignment="Top" Click="CloseButton_Click">
                        <iconPacks:PackIconMaterial Kind="Close" Width="24" Height="24" Foreground="{DynamicResource PrimaryBrush}"/>
                    </Button>
                </Grid>

                <!-- Панель фильтров -->
                <StackPanel Orientation="Vertical" Margin="0,0,0,10">
                    <!-- Поиск -->
                    <TextBox x:Name="SearchTextBox" Width="300" Margin="0,0,0,10"
                             Style="{StaticResource IconWatermarkTextBoxStyle}" Tag="Поиск по наименованию или категории"
                             TextChanged="Filter_TextChanged" />

                    <!-- Фильтр по категориям -->
                    <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                        <TextBlock Text="Категория:" VerticalAlignment="Center" Margin="0,0,10,0"/>
                        <ComboBox x:Name="CategoryComboBox" Width="250" 
                                  Style="{StaticResource StyledComboBox}"
                                  SelectionChanged="Filter_TextChanged">
                            <!-- Остальные категории будут загружены динамически -->
                        </ComboBox>
                    </StackPanel>
                </StackPanel>

                <!-- DataGrid для отображения товаров -->
                <DataGrid x:Name="ItemsDataGrid" Margin="0,0,0,10" Style="{StaticResource StyledDataGrid}"
                          SelectionChanged="ItemsDataGrid_SelectionChanged">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="ID" Binding="{Binding ТоварID}" Width="Auto"/>
                        <DataGridTextColumn Header="Наименование" Binding="{Binding Наименование}" Width="*"/>
                        <DataGridTextColumn Header="Категория" Binding="{Binding Категория}" Width="*"/>
                        <DataGridTextColumn Header="Количество" Binding="{Binding Количество}" Width="Auto"/>
                    </DataGrid.Columns>
                </DataGrid>

                <!-- Панель параметров перемещения -->
                <Border Background="{DynamicResource ButtonBackgroundBrush}" CornerRadius="10" Padding="15" Margin="0,0,0,20">
                    <StackPanel Orientation="Vertical" >
                        <TextBlock Text="Параметры перемещения" FontSize="16" FontWeight="Bold" Foreground="{DynamicResource PrimaryBrush}" Margin="0,0,0,10"/>

                        <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                            <TextBlock Text="Исходное местоположение:" VerticalAlignment="Center" Width="180"/>
                            <ComboBox x:Name="SourceLocationComboBox" Width="250" 
                                      Style="{StaticResource StyledComboBox}"
                                      ItemTemplate="{StaticResource ComboBoxItemWithIconTemplate}"
                                      IsEnabled="False">
                                <!-- Остальные местоположения будут загружены динамически -->
                            </ComboBox>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                            <TextBlock Text="Целевое местоположение:" VerticalAlignment="Center" Width="180"/>
                            <ComboBox x:Name="TargetLocationComboBox" Width="250" 
                                      Style="{StaticResource StyledComboBox}"
                                      ItemTemplate="{StaticResource ComboBoxItemWithIconTemplate}">
                                <!-- Остальные местоположения будут загружены динамически -->
                            </ComboBox>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                            <TextBlock Text="Количество для перемещения:" VerticalAlignment="Center" Width="180"/>
                            <TextBox x:Name="MoveQuantityTextBox" Width="250"
                                     Style="{StaticResource IconWatermarkTextBoxStyle}" Tag="Количество для перемещения"
                                     PreviewTextInput="NumberValidationTextBox" />
                        </StackPanel>

                        <!-- Кнопка для выполнения перемещения -->
                        <Button Content="Переместить" Width="150" Height="40" 
                                HorizontalAlignment="Right" 
                                Style="{StaticResource ControlButtonStyle}"
                                Click="MoveButton_Click"/>
                    </StackPanel>
                </Border>

                <!-- Кнопка для переключения темы -->
                <Button Width="30" Height="30" Background="Transparent" BorderThickness="0"
                        HorizontalAlignment="Center" Margin="0,20,0,0"
                        Click="ToggleTheme_Click">
                    <iconPacks:PackIconMaterial x:Name="ThemeIcon" Kind="WeatherSunny" Width="24" Height="24" Foreground="{DynamicResource PrimaryBrush}"/>
                </Button>
            </StackPanel>
        </Border>
    </Grid>
</Window>
