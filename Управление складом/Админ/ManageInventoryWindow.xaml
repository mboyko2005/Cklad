<Window x:Class="УправлениеСкладом.ManageInventoryWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:УправлениеСкладом"
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        Title="Управление складскими позициями" Height="600" Width="1000"
        WindowStartupLocation="CenterOwner" WindowStyle="None" AllowsTransparency="True" Background="Transparent"
        MouseDown="Window_MouseDown"
        FontFamily="Segoe UI">
    <Window.Resources>
        <!-- Глобальный стиль для всех TextBlock -->
        <Style TargetType="TextBlock">
            <Setter Property="FontFamily" Value="Segoe UI"/>
        </Style>

        <!-- Стиль для TextBlock в DataGrid колонках -->
        <Style x:Key="DataGridTextBlockStyle" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="Segoe UI"/>
        </Style>

        <!-- Общие стили для кнопок -->
        <Style x:Key="ControlButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="{DynamicResource ButtonBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="MinWidth" Value="120"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="10">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{DynamicResource ButtonHoverBackgroundBrush}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{DynamicResource ButtonPressedBackgroundBrush}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Стиль для кнопки удаления -->
        <Style x:Key="DeleteButtonStyle" TargetType="Button" BasedOn="{StaticResource ControlButtonStyle}">
            <Setter Property="Foreground" Value="{StaticResource ButtonBorderBrushDelete}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrushDelete}"/>
        </Style>

        <!-- Стиль для заголовков столбцов DataGrid -->
        <Style TargetType="DataGridColumnHeader">
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="Background" Value="{DynamicResource ButtonBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrush}"/>
            <Setter Property="BorderThickness" Value="0,0,0,1"/>
            <Setter Property="Padding" Value="5"/>
        </Style>

        <!-- Стиль для строк DataGrid -->
        <Style TargetType="DataGridRow">
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Стиль для ячеек DataGrid -->
        <Style TargetType="DataGridCell">
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="5"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Стиль для DataGrid -->
        <Style TargetType="DataGrid" x:Key="StyledDataGrid">
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
            <Setter Property="RowBackground" Value="Transparent"/>
            <Setter Property="AlternatingRowBackground" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="GridLinesVisibility" Value="None"/>
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="SelectionMode" Value="Single"/>
            <Setter Property="SelectionUnit" Value="FullRow"/>
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ColumnWidth" Value="*"/>
            <Setter Property="HeadersVisibility" Value="Column"/>
        </Style>

        <!-- Анимации для панели добавления/редактирования -->
        <Storyboard x:Key="ShowPanelStoryboard">
            <DoubleAnimation Storyboard.TargetName="SlidePanel"
                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                             To="0" Duration="0:0:0.3"/>
        </Storyboard>
        <Storyboard x:Key="HidePanelStoryboard">
            <DoubleAnimation Storyboard.TargetName="SlidePanel"
                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                             To="400" Duration="0:0:0.3"/>
        </Storyboard>
    </Window.Resources>

    <Grid x:Name="MainGrid">
        <Border Background="{DynamicResource WindowBackgroundBrush}" CornerRadius="20" Padding="20">
            <Border.Effect>
                <DropShadowEffect BlurRadius="10" ShadowDepth="0" Opacity="0.2"/>
            </Border.Effect>
            <Grid x:Name="RootGrid">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="0"/>
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Column="0">
                    <!-- Заголовок с кнопкой закрытия -->
                    <Grid Margin="0,0,0,10">
                        <TextBlock Text="Управление складскими позициями" FontSize="18" FontWeight="Bold" 
                                   Foreground="{DynamicResource PrimaryBrush}" HorizontalAlignment="Center"/>
                        <Button Width="30" Height="30" Background="Transparent" BorderThickness="0"
                                HorizontalAlignment="Right" VerticalAlignment="Top" Click="CloseButton_Click">
                            <iconPacks:PackIconMaterial Kind="Close" Width="24" Height="24" 
                                                        Foreground="{DynamicResource PrimaryBrush}"/>
                        </Button>
                    </Grid>

                    <!-- DataGrid для отображения складских позиций -->
                    <DataGrid x:Name="InventoryDataGrid" Margin="0,0,0,10" 
                              Style="{StaticResource StyledDataGrid}" 
                              Language="ru-RU">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="ID" Binding="{Binding Id}" Width="Auto"/>
                            <DataGridTextColumn Header="Название" Binding="{Binding Name}" Width="*"/>
                            <DataGridTextColumn Header="Цена" Binding="{Binding Price, StringFormat={}{0:C}, ConverterCulture=ru-RU}" Width="Auto"/>
                            <DataGridTextColumn Header="Количество" Binding="{Binding Quantity}" Width="Auto"/>
                            <DataGridTextColumn Header="Местоположение" Binding="{Binding Location}" Width="*"/>
                        </DataGrid.Columns>
                    </DataGrid>

                    <!-- Кнопки управления складскими позициями -->
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                        <Button Width="150" Margin="5" Click="AddInventory_Click" Style="{StaticResource ControlButtonStyle}">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <iconPacks:PackIconMaterial Kind="PlusCircleOutline" Width="24" Height="24" Margin="0,0,10,0"/>
                                <TextBlock Text="Добавить" FontSize="16" Foreground="{DynamicResource ButtonForegroundBrush}"/>
                            </StackPanel>
                        </Button>
                        <Button Width="180" Margin="5" Click="EditInventory_Click" Style="{StaticResource ControlButtonStyle}">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <iconPacks:PackIconMaterial Kind="PencilOutline" Width="24" Height="24" Margin="0,0,10,0"/>
                                <TextBlock Text="Редактировать" FontSize="16" Foreground="{DynamicResource ButtonForegroundBrush}"/>
                            </StackPanel>
                        </Button>
                        <Button Width="150" Margin="5" Click="DeleteInventory_Click" Style="{StaticResource DeleteButtonStyle}">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <iconPacks:PackIconMaterial Kind="DeleteOutline" Width="24" Height="24" Margin="0,0,10,0"/>
                                <TextBlock Text="Удалить" FontSize="16" Foreground="{DynamicResource ButtonBorderBrushDelete}"/>
                            </StackPanel>
                        </Button>
                        <!-- Кнопка для просмотра QR-кода -->
                        <Button Width="150" Margin="5" Click="ShowQr_Click" Style="{StaticResource ControlButtonStyle}">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <iconPacks:PackIconMaterial Kind="Qrcode" Width="24" Height="24" Margin="0,0,10,0"/>
                                <TextBlock Text="Показать QR" FontSize="16" Foreground="{DynamicResource ButtonForegroundBrush}"/>
                            </StackPanel>
                        </Button>
                    </StackPanel>

                    <!-- Кнопка для переключения темы -->
                    <StackPanel HorizontalAlignment="Center" Margin="0,10,0,0">
                        <Button Width="30" Height="30" Background="Transparent" BorderThickness="0"
                                Click="ToggleTheme_Click">
                            <iconPacks:PackIconMaterial x:Name="ThemeIcon" Kind="WeatherSunny" Width="24" Height="24"
                                                        Foreground="{DynamicResource PrimaryBrush}"/>
                        </Button>
                    </StackPanel>
                </StackPanel>

                <!-- Панель добавления/редактирования -->
                <Border x:Name="SlidePanel" Grid.Column="1" Background="{DynamicResource WindowBackgroundBrush}"
                        CornerRadius="10" Padding="20"
                        RenderTransformOrigin="1,0.5" Width="400">
                    <Border.RenderTransform>
                        <TranslateTransform X="400"/>
                    </Border.RenderTransform>
                    <Border.Effect>
                        <DropShadowEffect BlurRadius="10" ShadowDepth="0" Opacity="0.5"/>
                    </Border.Effect>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <!-- Заголовок панели -->
                        <Grid Grid.Row="0" Margin="0,0,0,20">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock x:Name="PanelTitle" Grid.Column="0" Text="Добавить складскую позицию" 
                                       FontSize="16" FontWeight="Bold" Foreground="{DynamicResource PrimaryBrush}" VerticalAlignment="Center"/>
                            <Button Grid.Column="1" Width="30" Height="30" Background="Transparent" BorderThickness="0" HorizontalAlignment="Right" Click="ClosePanel_Click">
                                <iconPacks:PackIconMaterial Kind="Close" Width="24" Height="24" Foreground="{DynamicResource PrimaryBrush}"/>
                            </Button>
                        </Grid>
                        <!-- Поля для ввода данных -->
                        <StackPanel Grid.Row="1">
                            <Label Content="Название товара:" Foreground="{DynamicResource ForegroundBrush}"/>
                            <TextBox x:Name="NameTextBox" Margin="0,0,0,10"/>
                            <Label Content="Цена:" Foreground="{DynamicResource ForegroundBrush}"/>
                            <TextBox x:Name="PriceTextBox" Margin="0,0,0,10"/>
                            <Label Content="Количество:" Foreground="{DynamicResource ForegroundBrush}"/>
                            <TextBox x:Name="QuantityTextBox" Margin="0,0,0,10"/>
                            <Label Content="Склад:" Foreground="{DynamicResource ForegroundBrush}"/>
                            <ComboBox x:Name="WarehouseComboBox" Margin="0,0,0,10"
                                      DisplayMemberPath="Name" SelectedValuePath="Id" />

                            <Label Content="Поставщик:" Foreground="{DynamicResource ForegroundBrush}"/>
                            <ComboBox x:Name="SupplierComboBox" Margin="0,0,0,10"
                                      DisplayMemberPath="Name" SelectedValuePath="Id"
                                      IsEditable="True" IsTextSearchEnabled="False"
                                      Text="{Binding SelectedSupplierName, UpdateSourceTrigger=PropertyChanged}"/>
                        </StackPanel>
                        <!-- Кнопки действия -->
                        <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right">
                            <Button Width="100" Margin="5" Click="SaveInventory_Click" Style="{StaticResource ControlButtonStyle}">
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <iconPacks:PackIconMaterial Kind="CheckCircleOutline" Width="24" Height="24" Margin="0,0,10,0"/>
                                    <TextBlock Text="Сохранить" FontSize="16" Foreground="{DynamicResource ButtonForegroundBrush}"/>
                                </StackPanel>
                            </Button>
                            <Button Width="100" Margin="5" Click="CancelInventory_Click" Style="{StaticResource ControlButtonStyle}">
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <iconPacks:PackIconMaterial Kind="CloseCircleOutline" Width="24" Height="24" Margin="0,0,10,0"/>
                                    <TextBlock Text="Отмена" FontSize="16" Foreground="{DynamicResource ButtonForegroundBrush}"/>
                                </StackPanel>
                            </Button>
                        </StackPanel>
                    </Grid>
                </Border>
            </Grid>
        </Border>
    </Grid>
</Window>
