<Window x:Class="УправлениеСкладом.Менеджер.ManageEmployeesWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:УправлениеСкладом.Менеджер"
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        Title="Управление сотрудниками склада" 
        Height="450" Width="800"
        WindowStartupLocation="CenterOwner" 
        WindowStyle="None" 
        AllowsTransparency="True" 
        Background="Transparent"
        MouseDown="Window_MouseDown">

    <Window.Resources>
        <!-- Стиль для кнопок (добавить/редактировать/сохранить и т.п.) -->
        <Style x:Key="ControlButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="{DynamicResource ButtonBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="MinWidth" Value="120"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="10">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{DynamicResource ButtonHoverBackgroundBrush}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{DynamicResource ButtonPressedBackgroundBrush}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Стиль для кнопки удаления (красный цвет) -->
        <Style x:Key="DeleteButtonStyle" TargetType="Button" BasedOn="{StaticResource ControlButtonStyle}">
            <Setter Property="Foreground" Value="{DynamicResource ButtonBorderBrushDelete}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrushDelete}"/>
        </Style>

        <!-- Стиль для заголовков столбцов DataGrid -->
        <Style TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="{DynamicResource ButtonBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrush}"/>
            <Setter Property="BorderThickness" Value="0,0,0,1"/>
            <Setter Property="Padding" Value="5"/>
        </Style>

        <!-- Стиль для строк DataGrid -->
        <Style TargetType="DataGridRow">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Стиль для ячеек DataGrid -->
        <Style TargetType="DataGridCell">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="5"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Стиль для DataGrid (общие настройки) -->
        <Style TargetType="DataGrid" x:Key="StyledDataGrid">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
            <Setter Property="RowBackground" Value="Transparent"/>
            <Setter Property="AlternatingRowBackground" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="GridLinesVisibility" Value="None"/>
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="SelectionMode" Value="Single"/>
            <Setter Property="SelectionUnit" Value="FullRow"/>
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ColumnWidth" Value="*"/>
            <Setter Property="HeadersVisibility" Value="Column"/>
        </Style>

        <!-- Стиль для TextBox с иконкой (для поиска и ввода данных) -->
        <Style x:Key="IconWatermarkTextBoxStyle" TargetType="TextBox">
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="{DynamicResource ButtonBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Grid>
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="10"/>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <!-- Левая иконка -->
                                <iconPacks:PackIconMaterial x:Name="Icon"
                                                            Width="20" Height="20"
                                                            Foreground="{TemplateBinding Foreground}"
                                                            VerticalAlignment="Center"
                                                            HorizontalAlignment="Left"
                                                            Margin="5,0,5,0"
                                                            Visibility="Visible"/>
                                <!-- Основной текст -->
                                <ScrollViewer Grid.Column="1" x:Name="PART_ContentHost" VerticalAlignment="Center"/>
                                <!-- Watermark -->
                                <TextBlock x:Name="Watermark"
                                           Text="{TemplateBinding Tag}"
                                           Foreground="Gray"
                                           Margin="30,0,0,0"
                                           VerticalAlignment="Center"
                                           IsHitTestVisible="False"
                                           Visibility="Collapsed"/>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Text" Value="">
                                <Setter TargetName="Watermark" Property="Visibility" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="Watermark" Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                            <!-- Поиск -->
                            <Trigger Property="Tag" Value="Поиск по имени, ID или роли">
                                <Setter TargetName="Icon" Property="Kind" Value="Magnify"/>
                                <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource PrimaryBrush}"/>
                            </Trigger>
                            <!-- Имя пользователя -->
                            <Trigger Property="Tag" Value="Имя пользователя">
                                <Setter TargetName="Icon" Property="Kind" Value="AccountOutline"/>
                                <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource PrimaryBrush}"/>
                                <Setter TargetName="Watermark" Property="Text" Value="Имя пользователя"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Стиль для PasswordBox: слева замочек, справа индикатор совпадения (ConfirmStatusIcon) -->
        <Style x:Key="IconPasswordBoxStyle" TargetType="PasswordBox">
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="{DynamicResource ButtonBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="PasswordBox">
                        <Grid>
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="10"/>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <!-- Иконка слева (замочек) -->
                                    <ColumnDefinition Width="*"/>
                                    <!-- Текст -->
                                    <ColumnDefinition Width="Auto"/>
                                    <!-- Иконка проверки (справа) -->
                                </Grid.ColumnDefinitions>

                                <!-- Левая иконка (замочек) -->
                                <iconPacks:PackIconMaterial x:Name="Icon"
                                                            Width="20" Height="20"
                                                            Foreground="{TemplateBinding Foreground}"
                                                            VerticalAlignment="Center"
                                                            HorizontalAlignment="Left"
                                                            Margin="5,0,5,0"/>
                                <!-- Основной ввод пароля -->
                                <ScrollViewer Grid.Column="1" x:Name="PART_ContentHost" VerticalAlignment="Center"/>
                                <!-- Иконка проверки совпадения паролей (по умолчанию скрыта) -->
                                <iconPacks:PackIconMaterial x:Name="ConfirmStatusIcon"
                                                            Grid.Column="2"
                                                            Width="20" Height="20"
                                                            Margin="5,0,5,0"
                                                            Visibility="Collapsed"
                                                            VerticalAlignment="Center"
                                                            HorizontalAlignment="Right"/>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Tag" Value="Пароль">
                                <Setter TargetName="Icon" Property="Kind" Value="LockOutline"/>
                                <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource PrimaryBrush}"/>
                            </Trigger>
                            <Trigger Property="Tag" Value="Подтверждение пароля">
                                <Setter TargetName="Icon" Property="Kind" Value="LockOutline"/>
                                <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource PrimaryBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Стиль для маленькой иконки-кнопки (голосовой ввод) -->
        <Style x:Key="SmallIconButtonStyle" TargetType="Button" BasedOn="{StaticResource ControlButtonStyle}">
            <Setter Property="Width" Value="30"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="MinHeight" Value="0"/>
        </Style>

        <!-- Анимации для панели добавления/редактирования -->
        <Storyboard x:Key="ShowPanelStoryboard">
            <DoubleAnimation Storyboard.TargetName="SlidePanel"
                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                             To="0" Duration="0:0:0.3"/>
        </Storyboard>
        <Storyboard x:Key="HidePanelStoryboard">
            <DoubleAnimation Storyboard.TargetName="SlidePanel"
                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                             To="300" Duration="0:0:0.3"/>
        </Storyboard>
    </Window.Resources>

    <Grid x:Name="MainGrid">
        <Border Background="{DynamicResource WindowBackgroundBrush}" CornerRadius="20" Padding="20">
            <Border.Effect>
                <DropShadowEffect BlurRadius="10" ShadowDepth="0" Opacity="0.2"/>
            </Border.Effect>
            <Grid x:Name="RootGrid">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="0"/>
                </Grid.ColumnDefinitions>

                <!-- Левая часть (основная) -->
                <StackPanel Grid.Column="0">
                    <!-- Заголовок окна с кнопкой закрытия -->
                    <Grid Margin="0,0,0,10">
                        <TextBlock Text="Управление сотрудниками склада" 
                                   FontSize="18" FontWeight="Bold" 
                                   Foreground="{DynamicResource PrimaryBrush}" 
                                   HorizontalAlignment="Center"/>
                        <Button Width="30" Height="30" Background="Transparent" BorderThickness="0"
                                HorizontalAlignment="Right" VerticalAlignment="Top" Click="CloseButton_Click">
                            <iconPacks:PackIconMaterial Kind="Close" 
                                                        Width="24" Height="24" 
                                                        Foreground="{DynamicResource PrimaryBrush}"/>
                        </Button>
                    </Grid>

                    <!-- Панель поиска + голосовой ввод -->
                    <StackPanel Orientation="Horizontal" Margin="0,0,0,10" HorizontalAlignment="Center">
                        <TextBox x:Name="SearchTextBox"
                                 Width="300"
                                 Margin="0,0,5,0"
                                 Style="{StaticResource IconWatermarkTextBoxStyle}"
                                 Tag="Поиск по имени, ID или роли"
                                 TextChanged="Filter_TextChanged" />
                        <Button x:Name="VoiceSearchButton"
                                Style="{StaticResource SmallIconButtonStyle}"
                                ToolTip="Голосовой поиск"
                                Click="VoiceSearchButton_Click"
                                Margin="0">
                            <iconPacks:PackIconMaterial x:Name="VoiceIcon"
                                                        Kind="Microphone"
                                                        Width="16" Height="16"
                                                        Foreground="{DynamicResource PrimaryBrush}" />
                        </Button>
                    </StackPanel>

                    <!-- DataGrid для отображения сотрудников -->
                    <DataGrid x:Name="EmployeesDataGrid"
                              Margin="0,0,0,10"
                              Style="{StaticResource StyledDataGrid}"
                              EnableRowVirtualization="False"
                              SelectionUnit="FullRow"
                              SelectionMode="Single">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="ID" Binding="{Binding ПользовательID}" Width="Auto"/>
                            <DataGridTextColumn Header="Имя пользователя" Binding="{Binding ИмяПользователя}" Width="*"/>
                            <DataGridTextColumn Header="Роль" Binding="{Binding Роль}" Width="*"/>
                        </DataGrid.Columns>
                    </DataGrid>

                    <!-- Кнопки управления (Добавить, Редактировать, Удалить) -->
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                        <Button Width="150" Margin="5" Click="AddEmployee_Click" Style="{StaticResource ControlButtonStyle}">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <iconPacks:PackIconMaterial Kind="AccountPlusOutline" 
                                                            Width="24" Height="24" 
                                                            Margin="0,0,10,0"/>
                                <TextBlock Text="Добавить" 
                                           FontSize="16" 
                                           Foreground="{DynamicResource ButtonForegroundBrush}"/>
                            </StackPanel>
                        </Button>
                        <Button Width="180" Margin="5" Click="EditEmployee_Click" Style="{StaticResource ControlButtonStyle}">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <iconPacks:PackIconMaterial Kind="AccountEditOutline" 
                                                            Width="24" Height="24" 
                                                            Margin="0,0,10,0"/>
                                <TextBlock Text="Редактировать" 
                                           FontSize="16" 
                                           Foreground="{DynamicResource ButtonForegroundBrush}"/>
                            </StackPanel>
                        </Button>
                        <Button Width="150" Margin="5" Click="DeleteEmployee_Click" Style="{StaticResource DeleteButtonStyle}">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <iconPacks:PackIconMaterial Kind="AccountRemoveOutline" 
                                                            Width="24" Height="24" 
                                                            Margin="0,0,10,0"/>
                                <TextBlock Text="Удалить" 
                                           FontSize="16" 
                                           Foreground="{DynamicResource ButtonBorderBrushDelete}"/>
                            </StackPanel>
                        </Button>
                    </StackPanel>

                    <!-- Кнопка переключения темы -->
                    <StackPanel HorizontalAlignment="Center" Margin="0,10,0,0">
                        <Button Width="30" Height="30" Background="Transparent" BorderThickness="0" 
                                Click="ToggleTheme_Click">
                            <iconPacks:PackIconMaterial x:Name="ThemeIcon" 
                                                        Kind="WeatherSunny" 
                                                        Width="24" Height="24" 
                                                        Foreground="{DynamicResource PrimaryBrush}"/>
                        </Button>
                    </StackPanel>
                </StackPanel>

                <!-- Правая панель (добавление/редактирование) -->
                <Border x:Name="SlidePanel" 
                        Grid.Column="1" 
                        Background="{DynamicResource WindowBackgroundBrush}"
                        CornerRadius="10" 
                        Padding="20"
                        RenderTransformOrigin="1,0.5" 
                        Width="300">
                    <Border.RenderTransform>
                        <TranslateTransform X="300"/>
                    </Border.RenderTransform>
                    <Border.Effect>
                        <DropShadowEffect BlurRadius="10" ShadowDepth="0" Opacity="0.5"/>
                    </Border.Effect>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <!-- Заголовок панели -->
                        <Grid Grid.Row="0" Margin="0,0,0,20">
                            <TextBlock x:Name="PanelTitle" 
                                       Text="Добавить сотрудника" 
                                       FontSize="16" 
                                       FontWeight="Bold" 
                                       Foreground="{DynamicResource PrimaryBrush}" 
                                       VerticalAlignment="Center"/>
                            <Button Width="30" Height="30" 
                                    Background="Transparent" 
                                    BorderThickness="0" 
                                    HorizontalAlignment="Right" 
                                    Click="ClosePanel_Click">
                                <iconPacks:PackIconMaterial Kind="Close" 
                                                            Width="24" Height="24" 
                                                            Foreground="{DynamicResource PrimaryBrush}"/>
                            </Button>
                        </Grid>

                        <!-- Поля для ввода данных сотрудника -->
                        <StackPanel Grid.Row="1">
                            <Label Content="Имя пользователя:" Foreground="{DynamicResource ForegroundBrush}"/>
                            <TextBox x:Name="UsernameTextBox" 
                                     Margin="0,0,0,10" 
                                     Style="{StaticResource IconWatermarkTextBoxStyle}" 
                                     Tag="Имя пользователя"/>

                            <Label Content="Пароль:" Foreground="{DynamicResource ForegroundBrush}"/>
                            <PasswordBox x:Name="PasswordBox" 
                                         Margin="0,0,0,10" 
                                         Style="{StaticResource IconPasswordBoxStyle}" 
                                         Tag="Пароль"/>

                            <Label Content="Подтверждение пароля:" Foreground="{DynamicResource ForegroundBrush}"/>
                            <!-- Поле для подтверждения с обработчиком PasswordChanged -->
                            <PasswordBox x:Name="ConfirmPasswordBox" 
                                         Margin="0,0,0,10" 
                                         Style="{StaticResource IconPasswordBoxStyle}" 
                                         Tag="Подтверждение пароля"
                                         PasswordChanged="ConfirmPasswordBox_PasswordChanged"/>
                        </StackPanel>

                        <!-- Кнопки действия (Сохранить / Отмена) -->
                        <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right">
                            <Button Width="100" Margin="5" 
                                    Click="SaveEmployee_Click"
                                    Style="{StaticResource ControlButtonStyle}">
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <iconPacks:PackIconMaterial Kind="CheckCircleOutline" 
                                                                Width="24" Height="24" 
                                                                Margin="0,0,10,0"/>
                                    <TextBlock Text="Сохранить" 
                                               FontSize="16" 
                                               Foreground="{DynamicResource ButtonForegroundBrush}"/>
                                </StackPanel>
                            </Button>
                            <Button Width="100" Margin="5" 
                                    Click="CancelEmployee_Click"
                                    Style="{StaticResource ControlButtonStyle}">
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <iconPacks:PackIconMaterial Kind="CloseCircleOutline" 
                                                                Width="24" Height="24" 
                                                                Margin="0,0,10,0"/>
                                    <TextBlock Text="Отмена" 
                                               FontSize="16" 
                                               Foreground="{DynamicResource ButtonForegroundBrush}"/>
                                </StackPanel>
                            </Button>
                        </StackPanel>
                    </Grid>
                </Border>
            </Grid>
        </Border>
    </Grid>
</Window>
