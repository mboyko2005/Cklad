<Window x:Class="УправлениеСкладом.ApiStatusWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        Title="Статус API"
        Height="200" Width="400"
        WindowStartupLocation="CenterOwner"
        WindowStyle="None"
        AllowsTransparency="True"
        Background="Transparent"
        Opacity="0"
        SnapsToDevicePixels="True"
        MouseDown="Window_MouseDown">

    <Window.Resources>

        <!-- Стиль для "обычных" кнопок (как в проекте, с рамкой и анимацией увеличения) -->
        <Style x:Key="ModernButtonStyle" TargetType="Button">
            <!-- Основные свойства -->
            <Setter Property="Background" Value="{DynamicResource ButtonBackgroundBrush}" />
            <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundBrush}" />
            <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrush}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Padding" Value="10,5" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                </Setter.Value>
            </Setter>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border"
                                CornerRadius="10"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- Анимация увеличения при наведении -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                                             To="1.05" Duration="0:0:0.2"/>
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                                             To="1.05" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                                             To="1" Duration="0:0:0.2"/>
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                                             To="1" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>

                            <!-- При нажатии (IsPressed) меняем цвет, если нужно -->
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource ButtonPressedBackgroundBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Стиль для крестика, убираем любые ховер-цвета -->
        <Style x:Key="CloseButtonStyle" TargetType="Button" BasedOn="{StaticResource ModernButtonStyle}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border"
                                Background="Transparent"
                                BorderBrush="Transparent"
                                CornerRadius="0"
                                SnapsToDevicePixels="True">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- Отключаем любые цветовые изменения при наведении/нажатии -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="Transparent"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="Transparent"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Opacity" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>

    <Window.Triggers>
        <!-- Анимация плавного появления окна -->
        <EventTrigger RoutedEvent="Window.Loaded">
            <BeginStoryboard>
                <Storyboard>
                    <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                     From="0" To="1" Duration="0:0:0.5"/>
                </Storyboard>
            </BeginStoryboard>
        </EventTrigger>
    </Window.Triggers>

    <Grid>
        <!-- Основная обёртка с фоном, скруглёнными углами и тенью -->
        <Border x:Name="MainBorder"
                Background="{DynamicResource WindowBackgroundBrush}"
                CornerRadius="20"
                Padding="20"
                ClipToBounds="True">
            <Border.Effect>
                <DropShadowEffect BlurRadius="15" ShadowDepth="0" Opacity="0.3"/>
            </Border.Effect>

            <Grid>
                <!-- Кнопка-крестик в верхнем правом углу -->
                <Button Width="30" Height="30"
                        Style="{StaticResource CloseButtonStyle}"
                        HorizontalAlignment="Right" VerticalAlignment="Top"
                        Click="CloseButton_Click">
                    <iconPacks:PackIconMaterial Kind="Close" Width="24" Height="24"
                                                Foreground="{DynamicResource PrimaryBrush}"/>
                </Button>

                <!-- Основной контент (StackPanel со статусом и кнопкой "Обновить") -->
                <StackPanel Margin="0,40,0,0" HorizontalAlignment="Center">
                    <!-- Индикатор статуса + текст -->
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,0,0,20">
                        <iconPacks:PackIconMaterial x:Name="ApiStatusIndicator"
                                                    Kind="Circle"
                                                    Width="16" Height="16"
                                                    Foreground="Gray"
                                                    Margin="0,0,10,0"/>
                        <TextBlock x:Name="StatusTextBlock"
                                   Text="Проверка API..."
                                   FontSize="16" FontWeight="Bold"
                                   FontFamily="Segoe UI"
                                   Foreground="{DynamicResource PrimaryBrush}"
                                   VerticalAlignment="Center"/>
                    </StackPanel>

                    <!-- Кнопка "Обновить" (с рамкой и анимацией увеличения) -->
                    <Button Content="Обновить"
                            Width="120" Height="40"
                            Style="{StaticResource ModernButtonStyle}"
                            HorizontalAlignment="Center"
                            Click="RefreshButton_Click"/>
                </StackPanel>
            </Grid>
        </Border>
    </Grid>
</Window>
