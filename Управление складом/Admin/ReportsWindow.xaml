<Window x:Class="УправлениеСкладом.ReportsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:УправлениеСкладом"
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:oxy="http://oxyplot.org/wpf"
        Title="Отчёты" Height="600" Width="1000"
        WindowStartupLocation="CenterOwner" WindowStyle="None" AllowsTransparency="True" Background="Transparent"
        MouseDown="Window_MouseDown" Loaded="Window_Loaded">
    <Window.Resources>
        <!-- Конвертер для преобразования bool в Visibility -->
        <local:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>

        <!-- Общие стили для кнопок -->
        <Style x:Key="ControlButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="{DynamicResource ButtonBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="MinWidth" Value="120"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="10">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{DynamicResource ButtonHoverBackgroundBrush}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{DynamicResource ButtonPressedBackgroundBrush}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Стиль для заголовков столбцов DataGrid -->
        <Style TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="{DynamicResource ButtonBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrush}"/>
            <Setter Property="BorderThickness" Value="0,0,0,1"/>
            <Setter Property="Padding" Value="5"/>
        </Style>

        <!-- Стиль для строк DataGrid -->
        <Style TargetType="DataGridRow">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Стиль для ячеек DataGrid -->
        <Style TargetType="DataGridCell">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="5"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Стиль для DataGrid -->
        <Style TargetType="DataGrid" x:Key="StyledDataGrid">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
            <Setter Property="RowBackground" Value="Transparent"/>
            <Setter Property="AlternatingRowBackground" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="GridLinesVisibility" Value="None"/>
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="SelectionMode" Value="Single"/>
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ColumnWidth" Value="*"/>
        </Style>
    </Window.Resources>

    <Grid x:Name="MainGrid">
        <Border Background="{DynamicResource WindowBackgroundBrush}" CornerRadius="20" Padding="10">
            <Border.Effect>
                <DropShadowEffect BlurRadius="10" ShadowDepth="0" Opacity="0.2"/>
            </Border.Effect>

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <!-- Заголовок с кнопкой закрытия -->
                <Grid Margin="0,0,0,10" Grid.Row="0">
                    <TextBlock Text="Отчёты" FontSize="18" FontWeight="Bold" Foreground="{DynamicResource PrimaryBrush}" HorizontalAlignment="Center"/>
                    <Button Width="30" Height="30" Background="Transparent" BorderThickness="0"
                            HorizontalAlignment="Right" VerticalAlignment="Top" Click="CloseButton_Click">
                        <iconPacks:PackIconMaterial Kind="Close" Width="24" Height="24" Foreground="{DynamicResource PrimaryBrush}"/>
                    </Button>
                </Grid>

                <!-- Основное содержимое окна -->
                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="250"/>
                        <!-- Левая панель -->
                        <ColumnDefinition Width="10"/>
                        <!-- Разделитель -->
                        <ColumnDefinition Width="*"/>
                        <!-- Правая панель -->
                    </Grid.ColumnDefinitions>

                    <!-- Левая боковая панель -->
                    <Border Grid.Column="0" Background="{DynamicResource ButtonBackgroundBrush}" Padding="10">
                        <Border.RenderTransform>
                            <TranslateTransform x:Name="LeftPanelTransform" X="-250"/>
                        </Border.RenderTransform>
                        <StackPanel>
                            <!-- Заголовок панели -->
                            <TextBlock Text="Выбор отчёта" FontSize="16" FontWeight="Bold" Foreground="{DynamicResource PrimaryBrush}" Margin="0,0,0,10"/>

                            <!-- Выбор типа отчёта -->
                            <TextBlock Text="Тип отчёта:" Foreground="{DynamicResource ForegroundBrush}" Margin="0,5,0,0"/>
                            <ComboBox x:Name="ReportTypeComboBox" SelectedIndex="0" Margin="0,0,0,10">
                                <ComboBoxItem Content="Самые продаваемые товары"/>
                                <ComboBoxItem Content="Пользователи системы"/>
                                <ComboBoxItem Content="Общая стоимость товаров"/>
                                <ComboBoxItem Content="Текущие складские позиции"/>
                            </ComboBox>

                            <!-- Выбор типа диаграммы -->
                            <TextBlock Text="Тип диаграммы:" Foreground="{DynamicResource ForegroundBrush}" Margin="0,5,0,0"/>
                            <ComboBox x:Name="ChartTypeComboBox" SelectedIndex="0" Margin="0,0,0,10">
                                <ComboBoxItem Content="Гистограмма"/>
                                <ComboBoxItem Content="Круговая"/>
                                <ComboBoxItem Content="Линейная"/>
                            </ComboBox>

                            <!-- Кнопка генерации отчёта -->
                            <Button Content="Сгенерировать отчёт" Width="200" Height="40" Click="GenerateReport_Click" Margin="0,10,0,10" Style="{StaticResource ControlButtonStyle}"/>

                            <!-- Формат экспорта -->
                            <TextBlock Text="Экспортировать как:" Foreground="{DynamicResource ForegroundBrush}" Margin="0,5,0,0"/>
                            <ComboBox x:Name="ExportFormatComboBox" SelectedIndex="0" Margin="0,0,0,10">
                                <ComboBoxItem Content="PNG"/>
                                <ComboBoxItem Content="PDF"/>
                                <ComboBoxItem Content="Excel (XLSX)"/>
                                <ComboBoxItem Content="Word (DOCX)"/>
                            </ComboBox>
                            <Button Content="Экспортировать" Width="200" Height="40" Click="ExportReport_Click" Margin="0,10,0,10" Style="{StaticResource ControlButtonStyle}"/>

                            <!-- Кнопка для переключения темы -->
                            <StackPanel HorizontalAlignment="Center" Margin="0,20,0,0">
                                <Button Width="30" Height="30" Background="Transparent" BorderThickness="0"
                                        Click="ToggleTheme_Click">
                                    <iconPacks:PackIconMaterial x:Name="ThemeIcon" Kind="WeatherSunny" Width="24" Height="24" Foreground="{DynamicResource PrimaryBrush}"/>
                                </Button>
                            </StackPanel>
                        </StackPanel>
                    </Border>

                    <!-- Разделитель -->
                    <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Center" VerticalAlignment="Stretch" Background="Gray"/>

                    <!-- Правая панель для отображения диаграммы -->
                    <Grid Grid.Column="2">
                        <StackPanel>
                            <!-- Заголовок -->
                            <TextBlock Text="Отображение отчёта" FontSize="16" FontWeight="Bold" Foreground="{DynamicResource PrimaryBrush}" Margin="0,0,0,10"/>

                            <!-- Диаграмма -->
                            <oxy:PlotView x:Name="PlotView" Height="500" Margin="0,10,0,0" Model="{Binding PlotModel}"/>
                        </StackPanel>
                    </Grid>
                </Grid>
            </Grid>
        </Border>
    </Grid>
</Window>
